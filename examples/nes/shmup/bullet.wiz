import "banks";
import "globals";
import "utility";
import "bullet_definitions";

namespace bullet {
    in zeropage {
        var current_index : u8 in b14;
    }

    in ram {
        let COUNT = 32;

        let PLAYER_INDEX = 0;
        let PLAYER_COUNT = 16;
        let ENEMY_INDEX = 16;
        let ENEMY_COUNT = 16;

        var type : [u8; COUNT];
        var x_subpixel : [u8; COUNT];
        var x_screen : [u8; COUNT];
        var x_pixel : [u8; COUNT];
        var y_subpixel : [u8; COUNT];
        var y_pixel : [u8; COUNT];
        var y_screen : [u8; COUNT];
        var v0 : [u8; COUNT];
        var v1 : [u8; COUNT];
    }

    func init_system() {
        var index : u8 in x;

        a = 0;

        for index in 0 .. COUNT - 1 {
            type[index] = a;
            x_subpixel[index] = a;
            x_pixel[index] = a;
            x_screen[index] = a;
            y_subpixel[index] = a;
            y_pixel[index] = a;
            y_screen[index] = a;
            v0[index] = a;
            v1[index] = a;
        }
    }

    func init_bullet(
        index : u8 in x,
        spawn_type : u8 in y,
        spawn_x : u16 in w0,
        spawn_y : u16 in w2
    ) {
        x_subpixel[index] = a;
        y_subpixel[index] = a;
        v0[index] = a;
        v1[index] = a;
        x_pixel[index] = a = <:spawn_x;
        x_screen[index] = a = >:spawn_x;
        y_pixel[index] = a = <:spawn_y;
        y_screen[index] = a = >:spawn_y;

        type[index] = a = spawn_type;

        if !zero {
            var func_ptr @ &w0 : func;
            <:func_ptr = a = (&bullet_definitions.init_handlers_l as *u8)[spawn_type];
            >:func_ptr = a = (&bullet_definitions.init_handlers_h as *u8)[spawn_type];
            return (*(&func_ptr as *func))();
        }
    }

    func _spawn_bullet(spawn_type : u8 in y, spawn_x : u16 in w0, spawn_y : u16 in w2, start : u8 in x, count : u8 in b4) : bool in carry {
        do {
            a = type[x];
            if zero {
                init_bullet(x, spawn_type, spawn_x, spawn_y);
                return true;
            }

            x++;
            count--;
        } while !zero;

        return false;
    }

    func spawn_player_bullet(spawn_type : u8 in y, spawn_x : u16 in w0, spawn_y : u16 in w2) : bool in carry {
        b4 = a = PLAYER_COUNT;
        return _spawn_bullet(spawn_type, spawn_x, spawn_y, PLAYER_INDEX, b4);
    }

    func update_all() {
        var index : u8 in x;

        for index in 0 .. COUNT - 1 {
            current_index = index;

            var bullet_type : u8 in y;
            bullet_type = a = type[index];
            if !zero {
                var func_ptr @ &w0 : func;
                <:func_ptr = a = (&bullet_definitions.update_handlers_l as *u8)[bullet_type];
                >:func_ptr = a = (&bullet_definitions.update_handlers_h as *u8)[bullet_type];
                call_handler(func_ptr);
            }

            index = current_index;
        }
    }    
}